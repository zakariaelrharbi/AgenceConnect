version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pern_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: pern_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pern_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pern_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pern_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pern_backend
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    environment:
      NODE_ENV: development
      PORT: 5000
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-key-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-key-change-in-production
      CORS_ORIGIN: http://localhost:3000
      SWAGGER_ENABLED: "true"
      DATABASE_URL: postgresql://postgres:root@localhost:5432/Test_DB?schema=public
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_logs:/app/logs
    networks:
      - pern_network
    command: npm run dev

  # Frontend App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pern_frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      VITE_API_BASE_URL: http://localhost:5000/api/v1
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - pern_network
    command: npm run dev

  # pgAdmin (Database Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pern_pgadmin
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - pern_network

  # Redis Commander (Redis Management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: pern_redis_commander
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - pern_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  backend_logs:
    driver: local

networks:
  pern_network:
    driver: bridge

# Health checks and monitoring
healthcheck:
  backend:
    test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 60s
  
  frontend:
    test: ["CMD", "curl", "-f", "http://localhost:3000"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 60s 